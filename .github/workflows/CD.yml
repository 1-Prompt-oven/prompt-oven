name: Continuous Deployment

on:
  workflow_run:
    workflows: ["Continuous Integration"]
    types:
      - completed
    branches: [ "main" ]

jobs:
  deploy:
    # Only run if CI workflow was successful
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      
      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/prompt_oven_fe:latest .
      
      - name: Push Docker image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/prompt_oven_fe:latest
      
   ## prepare direct ssh to EC2
      - name: Create .ssh directory
        run: mkdir -p ~/.ssh
      - name: Create knows_hosts
        run: touch ~/.ssh/known_hosts
      - name: Add EC2 host to known_hosts
        run: |
          ssh-keyscan -H ${{ secrets.EC2_FE_HOST }} >> ~/.ssh/known_hosts
      - name: Copy SSH key
        run: |
          echo "${{ secrets.EC2_KEY }}" > key.pem
          chmod 600 key.pem

   ## deploy to EC2
      - name: SSH into EC2 and stop docker container
        run: |
          ssh -i key.pem ubuntu@${{ secrets.EC2_FE_HOST }} << 'EOF'
            sudo docker stop prompt_oven_fe
      - name: SSH into EC2 and rm docker container
        run: |
          ssh -i key.pem ubuntu@${{ secrets.EC2_FE_HOST }} << 'EOF'
            sudo docker rm prompt_oven_fe
      - name: SSH into EC2 and pull docker image
        run: |
          ssh -i key.pem ubuntu@${{ secrets.EC2_FE_HOST }} << 'EOF'
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/prompt_oven_fe:latest
      - name: SSH into EC2 and run docker compose
        run: |
          ssh -i key.pem ubuntu@${{ secrets.EC2_FE_HOST }} << 'EOF'
            sudo docker-compose up -d
      - name: SSH into EC2 and prune docker image
        run: |
          ssh -i key.pem ubuntu@${{ secrets.EC2_FE_HOST }} << 'EOF'
            sudo docker image prune -f 
